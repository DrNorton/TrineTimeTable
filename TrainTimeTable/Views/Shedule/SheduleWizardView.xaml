<views:MvxWindowsPage
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TrainTimeTable.Views.Shedule"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="using:Cirrious.MvvmCross.WindowsCommon.Views"
    xmlns:converters="using:TrainTimeTable.Converters"
    x:Name="View"
    xmlns:Shedule="using:TrainTimeTable.Shared.ViewModels.Shedule"
    x:Class="TrainTimeTable.Views.Shedule.SheduleWizardView"
    mc:Ignorable="d" d:DataContext="{d:DesignInstance Shedule:SheduleWizardViewModel}">
    <views:MvxWindowsPage.Resources>
        <converters:DateTimeStringFormatConverter x:Key="DateTimeStringFormatConverter"/>
        <converters:SecundsToMinutesConverter x:Key="SecundsToMinutesConverter"/>

        <Style x:Key="ListViewItemStyle" TargetType="ListViewItem">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Margin" Value="10,0,10,0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid Background="{TemplateBinding Background}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.2">
                                            <VisualTransition.GeneratedEasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </VisualTransition.GeneratedEasingFunction>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="UnselectedSwiping">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectionBackground" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(ContentPresenter.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="UnselectedPointerOver"/>
                                    <VisualState x:Name="Selecting">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectionBackground" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(ContentPresenter.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectionBackground" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(ContentPresenter.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectionCheck" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="SelectedSwiping">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectionBackground" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(ContentPresenter.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unselecting"/>
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="SelectedUnfocused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectionBackground" d:IsOptimized="True"/>
                                            <ColorAnimation Duration="0" To="White" Storyboard.TargetProperty="(ContentPresenter.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="contentPresenter" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="SelectionCheck" d:IsOptimized="True"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="SelectionBackground" Background="{ThemeResource ListBoxItemSelectedBackgroundThemeBrush}" Opacity="0"/>
                            <ContentPresenter  x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <TextBlock x:Name="SelectionCheck" Foreground="White" FontSize="16" FontFamily="Segoe UI Symbol" HorizontalAlignment="Left" Margin="6" Opacity="0" Text="✔" VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </views:MvxWindowsPage.Resources>

    <Grid  Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <AutoSuggestBox Grid.Row="0" Grid.Column="0"  Grid.ColumnSpan="2" SuggestionChosen="FromStationBox_OnSuggestionChosen" TextMemberPath="StationName" Header="Откуда" Margin="10,10,10,0"  Text="{Binding FromPattern, Mode=TwoWay}" ItemsSource="{Binding FromSuggestionStations, Mode=TwoWay}">
            <AutoSuggestBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding StationName}" />
                    </StackPanel>
                </DataTemplate>
            </AutoSuggestBox.ItemTemplate>

        </AutoSuggestBox>
        <AutoSuggestBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" SuggestionChosen="ToStationBox_OnSuggestionChosen"   TextMemberPath="StationName" Header="Куда" Margin="10,10,10,0"  Text="{Binding ToPattern, Mode=TwoWay}" ItemsSource="{Binding ToSuggestionStations, Mode=TwoWay}">
            <AutoSuggestBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding StationName}" />
                    </StackPanel>
                </DataTemplate>
            </AutoSuggestBox.ItemTemplate>
        </AutoSuggestBox>



        <DatePicker Header="Когда"  YearVisible="False" Date="{Binding SelectDate, Mode=TwoWay}"  VerticalAlignment="Center"   Margin="10"   Grid.Row="2" Grid.Column="0"/>
        <Button  Grid.Row="2" Grid.Column="1"  HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,28,0,0"  Command="{Binding FindCommand}" Content="Найти!"/>
        <ListView ItemContainerStyle="{StaticResource ListViewItemStyle}" x:Name="sheduleList" HorizontalContentAlignment="Stretch" DataContext="{Binding Shedule}" ItemsSource="{Binding TrainTreads, Mode=TwoWay}" Grid.Row="3"  Grid.ColumnSpan="2">
            <ListView.Resources>
                <converters:AlternateConverter CurrentList="{Binding ElementName=sheduleList, Path=ItemsSource}" 
                                      AlternateBrushes="{Binding ElementName=View,Path=Brushes}"
                                      x:Key="AlternateConverter"/>
            </ListView.Resources>
            
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="-5" Background="{Binding Converter={StaticResource AlternateConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding Arrival, ConverterParameter=HH:mm, Converter={StaticResource DateTimeStringFormatConverter}}"/>
                        <TextBlock Grid.Column="1" Text="{Binding Departure, ConverterParameter=HH:mm, Converter={StaticResource DateTimeStringFormatConverter}}"/>
                        <TextBlock Grid.Column="2" Text="{Binding Duration, Converter={StaticResource SecundsToMinutesConverter}}"/>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</views:MvxWindowsPage>
