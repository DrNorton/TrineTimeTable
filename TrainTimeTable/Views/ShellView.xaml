<views:MvxWindowsPage
    x:Class="TrainTimeTable.Views.ShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:views="using:Cirrious.MvvmCross.WindowsCommon.Views"
    xmlns:controls="using:TrainTimeTable.Controls"
   xmlns:local="using:TrainTimeTable.Shared.Models"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
  
      TabNavigation="Cycle"
    mc:Ignorable="d">

    <Page.Resources>
        <DataTemplate x:Key="NavMenuItemTemplate" x:DataType="local:NavMenuItem">
            <Grid  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{Binding Background,Mode=TwoWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="48" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                    <FontIcon x:Name="Glyph"   FontSize="16"  Glyph="{Binding SymbolAsChar}" VerticalAlignment="Center" HorizontalAlignment="Center" ToolTipService.ToolTip="{x:Bind Label}"/>
                <TextBlock x:Name="Text" VerticalAlignment="Center" Grid.Column="1" Text="{Binding Label}" />
            </Grid>
        </DataTemplate>
    </Page.Resources>

    <Grid>
        <!-- Adaptive triggers -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactInline"/>
                        <Setter Target="RootSplitView.IsPaneOpen" Value="True"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootSplitView.DisplayMode" Value="CompactOverlay"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    
        <!-- Top-level navigation menu + app content -->
        <SplitView x:Name="RootSplitView"
                   DisplayMode="CompactOverlay" 
                   OpenPaneLength="256" Grid.ColumnSpan="2"
                   IsTabStop="False">
            <SplitView.Pane>
                <StackPanel>
                <Border HorizontalAlignment="Stretch" Background="#1d7373">
                    <ToggleButton x:Name="TogglePaneButton"
                      TabIndex="1" Background="#1d7373" Grid.Column="0"
                      Style="{StaticResource SplitViewTogglePaneButtonStyle}"
                      IsChecked="{Binding IsPaneOpen, ElementName=RootSplitView, Mode=TwoWay}"
                      Unchecked="TogglePaneButton_Checked"
                      AutomationProperties.Name="Menu"
                      ToolTipService.ToolTip="Menu" />
                </Border>

                <!-- A custom ListView to display the items in the pane.  The automation Name is set in the ContainerContentChanging event. -->
                <controls:NavMenuListView  Background="#2b2b2b" x:Name="NavMenuList" SelectedItem="{Binding SelectedItem,Mode=TwoWay}"
                                          TabIndex="3"
                                          Margin="0,0,0,0"
                                          HorizontalContentAlignment="Stretch"
                                          ContainerContentChanging="NavMenuItemContainerContentChanging"
                                          ItemContainerStyle="{StaticResource NavMenuItemContainerStyle}"
                                          ItemTemplate="{StaticResource NavMenuItemTemplate}"
                                          ItemInvoked="NavMenuList_ItemInvoked">
                    <controls:NavMenuListView.Header>
                        <!-- Using this custom back navigation button until the system-provided back button is enabled. -->
                      
                    </controls:NavMenuListView.Header>

                 

                </controls:NavMenuListView>
                </StackPanel>
            </SplitView.Pane>
            <SplitView.Content>
                <Grid x:Name="RootContent">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" Height="48" Background="#2b2b2b" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid x:Name="RootGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="BackButton"
                                TabIndex="2"
                                Style="{StaticResource NavigationBackButtonStyle}"
                                IsEnabled="{Binding AppFrame.CanGoBack, ElementName=Root}"
                                Width="{Binding ItemsPanelRoot.Width, ElementName=NavMenuList}"
                                HorizontalAlignment="{Binding ItemsPanelRoot.HorizontalAlignment, ElementName=NavMenuList}"
                                Click="BackButton_Click"/>
                            <TextBlock x:Name="Title" Grid.Column="1" Style="{ThemeResource BodyTextBlockStyle}" Text="Электрички Москвы" VerticalAlignment="Center" />
                        </Grid>
                    </Border>
                </Grid>
            </SplitView.Content>
            <!-- OnNavigatingToPage we synchronize the selected item in the nav menu with the current page.
                 OnNavigatedToPage we move keyboard focus to the first item on the page after it's loaded. -->
          
        </SplitView>

       
   
        
        
    </Grid>
</views:MvxWindowsPage>
